version: "3.4"

volumes:
  mongo_data:
    name: mbt_mongo_data
  elasticsearch-data:
    name: mbt_es_data

networks:
  backend:

services:
  mongo:
    image: mongo:6.0.2
    container_name: mbt-mongo
    ports:
      - 27017:27017
    volumes:
      - "mongo_data:/data/db"
    networks:
      - backend
    restart: always

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
    container_name: mbt-elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - backend

  kibana:
    container_name: mbt-kibana
    image: docker.elastic.co/kibana/kibana:7.13.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200    # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elastic
    networks:
      - backend
                                      # kibana will start when elasticsearch has started
  api:
    build: ./
    container_name: mbt-api
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      # Share the entire project except "node_modules". This prevents us from having to COPY the project files
      #   in the Dockerfile, while still keeping separate node dependency files.
      - "./:/backend"
      - "/backend/node_modules"
    networks:
      - backend
    depends_on:
      - mongo
      - elastic
    env_file:
      - ./.env-docker
    command: "${API_COMMAND}"

  task:
    build: ./
    container_name: mbt-task
    volumes:
      # Share the entire project except "node_modules". This prevents us from having to COPY the project files
      #   in the Dockerfile, while still keeping separate node dependency files.
      - "./:/backend"
      - "/backend/node_modules"
    networks:
      - backend
    depends_on:
      - mongo
      - elastic
      - api
    env_file:
      - ./.env-docker
    command: "${TASK_COMMAND}"

